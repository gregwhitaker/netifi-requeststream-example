plugins {
    id 'java'
    id 'com.google.protobuf'
}

sourceCompatibility = 1.8

dependencies {
    protobuf project(':letter-service-idl')
    protobuf project(':number-service-idl')

    implementation "com.netifi:netifi-broker-client"
    implementation "com.google.protobuf:protobuf-java"
    implementation "org.apache.logging.log4j:log4j-api"
    implementation "org.apache.logging.log4j:log4j-core"
    implementation "org.apache.logging.log4j:log4j-slf4j18-impl"
}

task runLetters(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'example.client.RunLettersStream'
}

task runLetter(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'example.client.RunLetter'
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc'
    }
    plugins {
        rsocketRpc {
            artifact = 'io.rsocket.rpc:rsocket-rpc-protobuf'
        }
    }
    generateProtoTasks {
        all().each { task ->
            task.plugins {
                rsocketRpc {}
            }
        }
    }
}